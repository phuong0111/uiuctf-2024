n = 158794636700752922781275926476194117856757725604680390949164778150869764326023702391967976086363365534718230514141547968577753309521188288428236024251993839560087229636799779157903650823700424848036276986652311165197569877428810358366358203174595667453056843209344115949077094799081260298678936223331932826351
e = 65535
c = 72186625991702159773441286864850566837138114624570350089877959520356759693054091827950124758916323653021925443200239303328819702117245200182521971965172749321771266746783797202515535351816124885833031875091162736190721470393029924557370228547165074694258453101355875242872797209141366404264775972151904835111

from Crypto.Util.number import bytes_to_long, long_to_bytes
from itertools import permutations


p = 11 # ví dụ 1 số ng tố bất kì nhá
q = 13 # như trên
r = 7  # không quan trọng lắm
_ = 0  # _ là chỗ mình được phép nhập giá trị

# ma trận của mình nó như này
M = [
    [p, 0, _, 0, _],
    [0, _, 0, _, 0],
    [_, 0, _, 0, _],
    [0, q, 0, r, 0],
    [_, 0, _, 0, 0],
]

# nhập giá trị như này
# M = [
#     [p, 0, _, 0, _],
#     [0, 1, 0, _, 0],
#     [_, 0, _, 0, 1],
#     [0, q, 0, r, 0],
#     [_, 0, 1, 0, 0],
# ]
# định thức của ma trận là p * r
# fun(M) tính định thức của M
# Nên p = gcd(n, fun(M))
# q = n // p
# phi = (p - 1) * (q - 1)
# d = pow(e, phi, -1)
# flag = long_to_bytes(pow(m, d, n))

